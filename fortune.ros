#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(alexandria split-sequence) :silent t))


(defpackage :ros.script.fortune.3721561154
  (:use :cl))
(in-package :ros.script.fortune.3721561154)

(defparameter *fortune-directory* "/usr/share/games/fortune")
(defvar *file* nil)
(defvar *show-file* nil)

(defun get-fortune-file (&optional file)
  (if file
   (format nil "~a/~a" *fortune-directory* file)
   (alexandria:random-elt (directory (format nil "~a/*" *fortune-directory*)))))

(defun fortune (file)
  (alexandria:random-elt
    (split-sequence:split-sequence #\% (alexandria:read-file-into-string file :external-format :iso-8859-1))))

(defconstant +usage+
  "Usage: cl-fortune [file] [-ch]

Options:
  -h       Show this help
  -c       Show the file from which this fortune came
")

(defun main (&rest argv)
  ; (declare (ignorable argv))
  (setf *random-state* (make-random-state t))

  (when (member "-h" argv :test #'string=)
    (princ +usage+)
    (uiop:quit 0))

  (when (member "-c" argv :test #'string=)
    (setf argv (remove "-c" argv :test #'string=))
    (setf *show-file* t))

  (let ((selected-file (get-fortune-file (first argv))))
    (when *show-file*
      (format t "(~a)" selected-file))
    (fresh-line)
    (princ (fortune selected-file))))


; (get-fortune-file "drugs")

;;; vim: set ft=lisp lisp:
