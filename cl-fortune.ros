#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(alexandria split-sequence) :silent t))


(defpackage :ros.script.fortune.3721561154
  (:use :cl))
(in-package :ros.script.fortune.3721561154)

(defparameter *fortune-directory* "/usr/share/games/fortune")
(defvar *file* nil)
(defvar *show-file* nil)

(defconstant +usage+
  "Usage: cl-fortune [file] [-ch]

Options:
  -h       Show this help
  -c       Show the file from which this fortune came
")

(defun get-fortune-file (&optional file)
  (if file
    (format nil "~a/~a" *fortune-directory* file)
    (alexandria:random-elt (directory (format nil "~a/*" *fortune-directory*)))))

(defun fortune (file)
  (handler-case
   (alexandria:random-elt
     (split-sequence:split-sequence
       #\%
       (alexandria:read-file-into-string file :external-format :iso-8859-1)))
   (SB-INT:SIMPLE-FILE-ERROR () :no-such-fortune)))

(defun get-option (option)
  (alexandria:switch (option :test #'string=)
    ("-c" (setf *show-file* t))
    ("-h" (princ +usage+) (uiop:quit 0))))

(defun remove-options (list)
  (remove-if
    (lambda (item)
      (alexandria:starts-with-subseq "-" item))
    list))

; (remove-options '("-c" "fdas" "-d"))

(defun main (&rest argv)
  (setf *random-state* (make-random-state t))

  (mapcar #'get-option argv)

  (setf argv (remove-options argv))
  (setf *file* (first argv))

  (let ((selected-file (get-fortune-file *file*)))
    (when *show-file*
      (format t "(~a)~%" selected-file))
    (let ((fortune (fortune selected-file)))
      (case fortune
        (:no-such-fortune
         (format t "~%No fortune '~A' found." *file*))
        (otherwise (princ fortune)))))
  (fresh-line))


;;; vim: set ft=lisp lisp:
